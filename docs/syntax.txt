BearLang Syntax (as of 20250929)

- Mostly C-like
- Types:
    - Floats (all are doubles): flt 
    - Integers (all are 64bit signed): int 
    - Strings (heap managed): str 
- Type mods:
    - Box (automatically dereferenced unique ptr): box::SomeType
        - Can be reassigned into another box:
        - box::Foo myFoo = new Foo();
        - myFoo = new Foo(); // release previously held Foo
    - Bag (automatically dereferenced shared ptr): bag::SomeType
        - Can be assigned by new or by another bag:
        - bag::Foo myFoo = new Foo();
        - bag::Foo myFoo = otherFoo; // inc ref count
        - myFoo = new Foo(); // reassign and dec ref count Foo
    - Both 

- Functions: 
    fn function_name(type_name arg) -> return_type {...}
- Scope:
    space my_space {...}
- Use ".." as scope resolution symbol:
    - Example:
```
    fn main() -> int {
        return Foo..bar;
    }
    struct Foo {
        static int MAGIC_ZERO = 0; 
        fn bar() -> int {
            return MAGIC_FOO;
        }
    }
```
